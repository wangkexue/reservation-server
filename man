.\" Process this file with
.\" groff -man -Tascii man
.\"
.TH ARS 1 "OCTOBER 2013" "NU EECS 343" "NU EECS 343 - Operating Systems - Fall 2013"
.SH NAME
.B Airline Reservation System
.SH DESCRIPTION
.B We implement the priority scheduling for the extra points.
.SH DESIGN APPROACH
.B For priority scheduling, we define a flag named PRIORITY_QUEUE in thread_pool.h. We create a number of threads at process startup and place them into a thread pool, where they sit and wait for work. When the server receives a request, it calls a thread from this pool to execute the request, if anyone is available. Once the thread completes its work, it returns to the pool and waits for next work. If the pool contains no available thread, the work will be put in the end of work-queue, until one becomes free. We use a singly linked list to implement our working queue to store the requests. To deal with the race condition, we use mutual exclusion in seat.c. We lock the seats when we need to view and change the state of them, and unlock them after that.
.SH AUTHOR
Zhiyuan Wang - ZWW991 - 2815130 - zywang@u.northwestern.edu
Haodong Wang - HWP628 - 2814220 - haodongwang2013@u.northwestern.edu 
 Xi Zheng     - XZA919 - 2793551 - xizheng2013@u.northwestern.edu
